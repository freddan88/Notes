{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"React Functional Component + useState and useEffect": {
		"prefix": "fl-rfc",
		"body": [
			"import React, { useState, useEffect } from 'react';",
			"",
			"const $TM_FILENAME_BASE = (props) => {",
			"  const [ isLoading, setIsLoading ] = useState(true);",
			"",
			"  useEffect(() => {",
			"  // Documentation hooks as lifecycle-methods:",
			"  // https://dev.to/trentyang/replace-lifecycle-with-hooks-in-react-3d4n",
			"  }, []);",
			"",
			"  return (",
			"    <div>",
			"      <h1>Snippet(fl-rsc)</h1>",
			"    </div>",
			"  );",
			"};",
			"",
			"export default $TM_FILENAME_BASE;"
		],
		"description": "React/func/state/effect"
	},
	"React Functional Component Typescript + useState and useEffect": {
		"prefix": "fl-rfct",
		"body": [
			"import React, { useState, useEffect } from 'react';",
			"import './$TM_FILENAME_BASE.css';",
			"",
			"interface IProps {}",
			"",
			"const $TM_FILENAME_BASE: React.FC<IProps> = (props) => {",
			"  const [ isLoading, setIsLoading ] = useState<boolean>(true);",
			"",
			"  useEffect(() => {",
			"  // Documentation hooks as lifecycle-methods:",
			"  // https://dev.to/trentyang/replace-lifecycle-with-hooks-in-react-3d4n",
			"  }, []);",
			"",
			"  return (",
			"    <div>",
			"      <h1>Snippet(fl-rsct)</h1>",
			"    </div>",
			"  );",
			"};",
			"",
			"export default $TM_FILENAME_BASE;"
		],
		"description": "React/func/state/effect"
	},
	"React Class Component Evimeria + Typescript": {
		"prefix": "e-rcct",
		"body": [
			"import * as React from 'react';",
			"import WebDocComponent from '../../WebDocComponent';",
			"",
			"interface IProps {}",
			"",
			"interface IState {}",
			"",
			"class $TM_FILENAME_BASE extends WebDocComponent<IProps, IState> {",
			"   constructor(props: IProps) {",
			"       super(props);",
			"       ",
			"       this.state = {};",
			"}",
			"",
			"render() {",
			"   return (",
			"       <div>",
			"           <h1>Snippet(e-rcct)</h1>",
			"       </div>",
			"   );",
			"}",
			"}",
			"",
			"export default $TM_FILENAME_BASE;"
		],
		"description": "React/Evimeria/Class/Typescript"
	},
	"Webdoc: React Class Component - State + Typescript": {
		"prefix": "wdrccst",
		"body": [
		  "import * as React from 'react';",
		  "import WebDocComponent from '../../../WebDocComponent';",
		  "",
		  "/*",
		  "[Available Props]:",
		  "",
		  "[Example Usage]:",
		  "    <div id=\"$TM_FILENAME_BASE\"></div>",
		  "",
		  "    <script>",
		  "        window.createComponent(",
		  "            // Path to the component from: journal_sys/assets/js/components:",
		  "            '<component-directories>/$TM_FILENAME_BASE',",
		  "            {",
		  "                // List props!",
		  "            },",
		  "            // Anchor (#id) to mount the components on:",
		  "            '$TM_FILENAME_BASE'",
		  "        );",
		  "    </script>",
		  "*/",
		  "",
		  "interface IProps {}",
		  "",
		  "interface IState {}",
		  "",
		  "class $TM_FILENAME_BASE extends WebDocComponent<IProps, IState> {",
		  "",
		  "   constructor(props: IProps) {",
		  "       super(props);",
		  "",
		  "       this.state = {};",
		  "    }",
		  "",
		  "    componentDidMount(): void {}",
		  "",
		  "    componentWillUnmount(): void {}",
		  "",
		  "    componentDidUpdate(prevProps: Readonly<IProps>, prevState: Readonly<IState>, snapshot?: any): void {}",
		  "",
		  "    render() {",
		  "        return (",
		  "            <div>",
		  "                <h2>Snippet: wdrccst</h2>",
		  "            </div>",
		  "        );",
		  "    }",
		  "}",
		  "",
		  "export default $TM_FILENAME_BASE;",
		  ""
		],
		"description": "Webdoc: React Class Component - State + Typescript"
	  },
	  "React Functional Component - State + Typescript": {
		"prefix": "flrfcst",
		"body": [
		  "import { useState, useEffect } from \"react\";",
		  "",
		  "/*",
		  "[Available Props]:",
		  "  ",
		  "*/",
		  "",
		  "interface IProps {}",
		  "",
		  "const $TM_FILENAME_BASE: React.FC<IProps> = (props) => {",
		  "  const [count, setCount] = useState<number>(0);",
		  "",
		  "  useEffect(() => {",
		  "    // Run when component mounts",
		  "    return () => {",
		  "      // cleanup",
		  "    };",
		  "  }, []);",
		  "",
		  "  return (",
		  "    <div>",
		  "      <ul>",
		  "        <li>",
		  "          <a href=\"https://www.youtube.com/watch?v=f687hBjwFcM\" rel=\"noreferrer noopener\" target=\"_blank\">",
		  "            React Hooks",
		  "          </a>",
		  "        </li>",
		  "        <li>",
		  "          <a href=\"https://www.youtube.com/watch?v=Z5iWr6Srsj8\" rel=\"noreferrer noopener\" target=\"_blank\">",
		  "            React Typescript",
		  "          </a>",
		  "        </li>",
		  "        <li>",
		  "          <a href=\"https://www.youtube.com/watch?v=3PtiSy8G-Cs\" rel=\"noreferrer noopener\" target=\"_blank\">",
		  "            React Events Typescript",
		  "          </a>",
		  "        </li>",
		  "        <li>",
		  "          <a href=\"https://www.youtube.com/watch?v=nViEqpgwxHE\" rel=\"noreferrer noopener\" target=\"_blank\">",
		  "            Typescript Generics",
		  "          </a>",
		  "        </li>",
		  "        <li>",
		  "          <a href=\"https://www.youtube.com/watch?v=BwuLxPH8IDs\" rel=\"noreferrer noopener\" target=\"_blank\">",
		  "            Typescript Course",
		  "          </a>",
		  "        </li>",
		  "        <li>",
		  "          <a href=\"https://dev.to/trentyang/replace-lifecycle-with-hooks-in-react-3d4n\" rel=\"noreferrer noopener\" target=\"_blank\">",
		  "            React Hooks vs lifecycle-methods",
		  "          </a>",
		  "        </li>",
		  "      </ul>",
		  "    </div>",
		  "  );",
		  "};",
		  "",
		  "export default $TM_FILENAME_BASE;",
		  ""
		],
		"description": "React Functional Component - State + Typescript"
	},
	"EME: React Functional Component - State + Typescript": {
		"prefix": "emerfcst",
		"body": [
		  "import { useState } from 'react';",
		  "",
		  "interface IProps {}",
		  "",
		  "function $TM_FILENAME_BASE(props: IProps) {",
		  "  const [count, setCount] = useState<number>(0);",
		  "",
		  "  return (",
		  "    <div>",
		  "      <ul>",
		  "        <li>",
		  "          <a",
		  "            href=\"https://www.youtube.com/watch?v=f687hBjwFcM\"",
		  "            rel=\"noreferrer noopener\"",
		  "            target=\"_blank\"",
		  "          >",
		  "            React Hooks",
		  "          </a>",
		  "        </li>",
		  "        <li>",
		  "          <a",
		  "            href=\"https://www.youtube.com/watch?v=Z5iWr6Srsj8\"",
		  "            rel=\"noreferrer noopener\"",
		  "            target=\"_blank\"",
		  "          >",
		  "            React Typescript",
		  "          </a>",
		  "        </li>",
		  "        <li>",
		  "          <a",
		  "            href=\"https://www.youtube.com/watch?v=3PtiSy8G-Cs\"",
		  "            rel=\"noreferrer noopener\"",
		  "            target=\"_blank\"",
		  "          >",
		  "            React Events Typescript",
		  "          </a>",
		  "        </li>",
		  "        <li>",
		  "          <a",
		  "            href=\"https://www.youtube.com/watch?v=nViEqpgwxHE\"",
		  "            rel=\"noreferrer noopener\"",
		  "            target=\"_blank\"",
		  "          >",
		  "            Typescript Generics",
		  "          </a>",
		  "        </li>",
		  "        <li>",
		  "          <a",
		  "            href=\"https://www.youtube.com/watch?v=BwuLxPH8IDs\"",
		  "            rel=\"noreferrer noopener\"",
		  "            target=\"_blank\"",
		  "          >",
		  "            Typescript Course",
		  "          </a>",
		  "        </li>",
		  "        <li>",
		  "          <a",
		  "            href=\"https://dev.to/trentyang/replace-lifecycle-with-hooks-in-react-3d4n\"",
		  "            rel=\"noreferrer noopener\"",
		  "            target=\"_blank\"",
		  "          >",
		  "            React Hooks vs lifecycle-methods",
		  "          </a>",
		  "        </li>",
		  "      </ul>",
		  "    </div>",
		  "  );",
		  "}",
		  "",
		  "export default $TM_FILENAME_BASE;"
		],
		"description": "EME: React Functional Component - State + Typescript"
	  },
	  "React Typescript Functional Component": {
		"prefix": "rtfc",
		"body": [
		  "import { FC, useEffect } from \"react\";",
		  "",
		  "interface IProps {}",
		  "",
		  "const $TM_FILENAME_BASE: FC<IProps> = (props) => {",
		  "  useEffect(() => {",
		  "    // Documentation hooks as lifecycle-methods:",
		  "    // https://dev.to/trentyang/replace-lifecycle-with-hooks-in-react-3d4n",
		  "  }, []);",
		  "",
		  "  return (",
		  "    <div>",
		  "      <h1>Snippet(rtfc)</h1>",
		  "    </div>",
		  "  );",
		  "};",
		  "",
		  "export default $TM_FILENAME_BASE;;"
		],
		"description": "React Typescript Functional Component"
	  }
}